from collections import deque

class Solution:
    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:
        visited = set()
        queue = deque([0])  # Start with room 0
        
        while queue:
            room = queue.popleft()
            if room not in visited:
                visited.add(room)
                for key in rooms[room]:
                    queue.append(key)
        
        return len(visited) == len(rooms)

rooms1 = [[1],[2],[3],[]]
print(Solution().canVisitAllRooms(rooms1))

rooms2 = [[1,3],[3,0,1],[2],[0]]
print(Solution().canVisitAllRooms(rooms2))

rooms3 = [[1,2],[3],[0,3],[1]]
print(Solution().canVisitAllRooms(rooms3))

rooms4 = [[1],[0,2,3],[4],[],[]]
print(Solution().canVisitAllRooms(rooms4))
